
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>列表渲染</title>
    <script src="~/Scripts/vue.min.js"></script>
</head>
<body>
    <div id="v">
        <ul>
            <li v-for="(item,i) in items">{{i}}-{{item.a}}</li>
        </ul>
        <ul>
            <li v-for="(v,name,index) in itemObj" style="cursor:pointer">{{v}}-{{name}}-{{index}}</li>
        </ul>
        <button onclick="push();">push</button>
        <button onclick="pop();">pop</button>
        <button onclick="shift();">shift</button>
        <button onclick="unshift();">unshift</button>
        <button onclick="sort();">sort</button>
        <button onclick="reverse();">reverse</button><br />

        <button onclick="Vueset();">Vue.set(vm.items, indexOfItem, newValue)</button><br />
        <button onclick="vmItemsSplice();">vm.items.splice(indexOfItem, 1, newValue)</button><br />
        <button onclick="vm$set();">vm.$set(vm.items, indexOfItem, newValue)</button><br />
        <button onclick="vmlength();">  vm.items.splice(1)</button><br />
        <button onclick="Vueset();"> Vue.set(vm.userProfile,'age', 27)</button><br />
        <button onclick="vm$set();"> vm.$set(vm.userProfile, 'age', 27)</button><br />
        <p>Object.assign() 或 _.extend()</p>
        <ul>
            <li v-for="num in filterNums2">{{num}}</li>
        </ul>
        <ul>
            <li v-for="num in filterNums1(numbers)">{{num}}</li>
        </ul>
        <div>
            <span v-for="n in 10">{{n}}</span>
        </div>
        <div>不推荐在同一元素上使用 v-if 和 v-for</div>
        <input type="text" value="aaaaaaaaa" @@blur="abc();"/>
    </div>


    <button onclick="test();"> test()</button><br />
    <script>
        var vm = new Vue({
            el: '#v',
            data: {
                items: [{ a: 'aa', b: 2 }, { a: 'bb', b: 3 }, { a: 'cc', b: 4 }],
                itemObj: { name: 'name11', age: 'age11', aa: 'aa' },
                numbers: [1, 2, 3, 4, 5, 6, 7, 8, 9],
            },
            computed: {
                filterNums2: function () {
                    return this.numbers.filter(function (num) {
                        return num % 2 === 0;
                    });
                },
            },
            methods: {
                filterNums1: function (numbers) {
                    return numbers.filter(function (num) {
                        return num % 1 === 0;
                    });
                },
                abc: function () {
                    alert(1);
                }
            },
        });

        function push() {
            vm.items.push({ a: 'dd', b: 5 });
        }
        function pop() {
            var result = vm.items.pop();
            console.log(result);
        }
        function shift() {
            var result = vm.items.shift();
            console.log(result);
        }
        function unshift() {
            vm.items.unshift({ a: 'dd', b: 5 });
        }

        function Vueset() {
            Vue.set(vm.items, 0, { a: 'aa1', b: 2 })
        }
        function vmItemsSplice() {
            vm.items.splice(0, 1, { a: 'aa2', b: 2 })
        }
        function vmlength() {
            vm.items.splice(1)
        }

        function Vueset() {
            Vue.set(vm.itemObj, 'ces1', 'ceshi1')
        }
        function vm$set() {
            vm.$set(vm.itemObj, 'ces2', 'ceshi122')
        }

        function test() {
            var arr = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i'];
            for (let i = 0; i < arr.length; i++) {
                // arr.splice(i,1);//(循环删除所有元素)i是索引，1是长度，null的意思是该元素替换为null
                if (i == 2) {
                    arr.splice(i, 1);//删除第2个元素
                    arr.splice(i + 2, 1, null);//把第4个位置的元素替换为null
                    arr.splice(i + 3, 2, ['w', 'z']);//把第5和第6位置的元素替换为w和z
                }
            }

            }
    </script>
</body>
</html>
