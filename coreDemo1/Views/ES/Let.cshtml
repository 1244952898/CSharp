
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Let</title>
</head>
<body>
    @*<script>
        {
            let a = 10;
            var b = 1;
        }
        console.log(b);
        console.log(a);
    </script>*@
    @*<script>
        var a = [];
        for (var i = 0; i < 10; i++) {
            a[i] = function () {
                console.log(i);
            }
        }
        a[6]();

        var aa = [];
        for (let j = 0; j < 10; j++) {
            aa[j] = function () {
                console.log(j);
            }
        }
        aa[6]();

        for (let i = 0; i < 3; i++) {
            //console.log(i);
            let i = 'abc';
            console.log(i);
        }
    </script>*@
    @*<script>
        console.log(a);
        var a = 10;

        console.log(b);
        let b = 10;
    </script>*@
    @*<script>
        //var tmp = 123;
        //if (true) {
        //    tmp = 'abc'; // ReferenceError
        //    let tmp;
        //}

        if (true) {
            // TDZ开始
            tmp = 'abc'; // ReferenceError
            console.log(tmp); // ReferenceError

            let tmp; // TDZ结束
            console.log(tmp); // undefined

            tmp = 123;
            console.log(tmp); // 123
        }
    </script>*@
    @*<script>
        var temp = new Date();
        function f() {
            console.log(temp);
            if (false) {
                var temp = "abc";
            }
        }
        f();

        var s = 'hello';
        for (var i = 0; i < s.length; i++) {
            console.log(s[i]);
        }
        console.log(i); // 5
    </script>*@
    @*<script>
        // 情况一
        if (true) {
            function f1() {
                console.log(1)
            }
        }
        f1();
        // 情况二
        try {
            function f2() {
                console.log(2)
            }
        } catch (e) {
            // ...
        }
        f2();
    </script>*@
    @*<script>
        var a = 1;
        console.log(window.a);
        console.log(globalThis.a);
        
        let b = 2;
        console.log(window.b);
    </script>*@
    @*<script>
        let [foo, [[bar], baz]] = [1, [[2], 3]];
        foo // 1
        bar // 2
        baz // 3
        let [aa, [[bb], cc]] = [1,[[2], 3]];
        console.log(aa);
        console.log(bb);
        console.log(cc);
        let [, , d] = [4, 5, 6];
        let [e, , f] = [7, 8, 9];
        console.log(e);
        console.log(f);
        let [g, ...h] = [10, 11, 12];
        console.log(g);
        console.log(h);
    </script>*@
    @*<script>
        let [x, y, z] = new Set(['a', 'b', 'c']);
        console.log(x);

        function* fibs() {
            let a = 0;
            let b = 1;
            while (true) {
                yield a;
                [a, b] = [b, a + b];
            }
        }

        let [first, second, third, fourth, fifth, sixth] = fibs();
        console.log(sixth);
    </script>*@
    @*<script>
        let { sin, cos, floor } = Math;
        console.log(floor(2.3));
        let { log } = console;
        log(2);
    </script>*@
    @*<script>
        let a = { aa: "11", bb: "22" };
        let { aa: cc } = a;
        console.log(cc);
    </script>*@
    @*<script>
        let { aa, aa: [a, b] } = { aa: [1, 2] };
        console.log(aa);
        console.log(a);
        console.log(b);
        let obj = {
            p: [
                'Hello',
                { y: 'World' }
            ]
        };

        let { p, p: [x, { y }] } = obj;
        console.log(x);
        console.log(y);
        console.log(p);

        const node = {
            loc: {
                start: {
                    line: 1,
                    column: 5
                }
            }
        };

        let { loc, loc: { start }, loc: { start: { line } } }=node;
        console.log(line);
        console.log(start);
        console.log(loc);

    </script>*@
    @*<script>
        // 正确的写法
        let x;
        ({ x } = { x: 1 });

        let arr = [1, 2, 3, 4, 5, 6];
        let { 0: first, [arr.length - 1]: last } = arr;
        console.log(first);
        console.log(last);
        first // 1
        last // 3
    </script>*@
    @*<script>
        const [a, b, c, d, e] = 'hello';
        a // "h"
        b // "e"
        c // "l"
        d // "l"
        e // "o"

        let { length: len } = 'hello';
        len // 5
    </script>*@
    @*<script>
        function abc([x, y]) {
            return x + y;
        }
        console.log(abc([1, 2]));

        [[1, 2], [3, 4]].map(([a, b]) => a + b);
        // [ 3, 7 ]

        function move({ x = 0, y = 0 } = {}) {
            return [x, y];
        }
        move({ x: 3, y: 8 }); // [3, 8]
        move({ x: 3 }); // [3, 0]
        move({}); // [0, 0]
        move(); // [0, 0]

        function move({ x, y } = { x: 0, y: 0 }) {
            return [x, y];
        }
        move({ x: 3, y: 8 }); // [3, 8]
        move({ x: 3 }); // [3, undefined]
        move({}); // [undefined, undefined]
        move(); // [0, 0]

        [1, undefined, 3].map((x = 'yes') => x);
        // [ 1, 'yes', 3 ]
    </script>*@
</body>
</html>
